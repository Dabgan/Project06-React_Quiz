{"version":3,"sources":["components/HintButton.jsx","components/Question/QuestionPanel.jsx","components/Answers/Answer.jsx","components/Answers/AnswerPanel.jsx","components/NextQuestionButton.jsx","components/LoaderIcon.jsx","components/FinishQuizButton.jsx","pages/quiz/QuizPanel.jsx","pages/statistics/Statistics.jsx","pages/main/MainPanel.jsx","App.js","index.js"],"names":["HintButton","deleteMethod","isAvailable","btnText","buttonStyle","className","onClick","QuestionPanel","question","currentQuestion","isAnswerChosen","isAvailableFiftyFifty","isAvailableDeleteOne","fiftyFifty","deleteOne","isIconVisible","loaderIcon","isAnswerSubmitted","style","display","quest","Answer","this","props","selectAnswer","answerText","id","answerSubmitedClass","Component","AnswerPanel","answers","isSubmitted","onSelect","answersList","map","answer","key","text","answerClass","submitedAnswerClass","NextQuestionButton","getNextQuestion","quizLength","LoaderIcon","FinishQuizButton","points","displayButton","to","pathname","state","disabled","QuizPanel","apiURL","location","questions","actualQuestion","actualAnswers","submitAnswer","deleteOneHint","fiftyFiftyHint","componentDidMount","fetch","then","res","json","formattedQuestion","results","loadedQuestion","htmlDecode","formattedAnswers","answerChoices","incorrect_answers","splice","Math","floor","random","correct_answer","isAnswerCorrect","index","isCorrect","isMarked","setState","input","DOMParser","parseFromString","documentElement","textContent","event","clickedAnswer","parseInt","target","showWarningSelectAnswer","length","number","getRandomNumber","x","deleteAnswer","hint","arrayFiltered","filter","randomNumber","finalArray","deleteOneAnswer","deleteTwoAnswers","Statistics","MainPanel","category","changeCategory","optionText","options","selectedIndex","value","getCategoryURL","htmlFor","onChange","App","basename","process","exact","path","component","Quiz","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05716ca1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction HintButton({ deleteMethod, isAvailable, btnText }) {\r\n    const buttonStyle = isAvailable ? \"\" : \"btn-disabled\";\r\n    return (\r\n        <div className=\"prompt\">\r\n            <button\r\n                className={\"btn btn-prompt \" + buttonStyle}\r\n                onClick={() => deleteMethod(isAvailable)}\r\n            >\r\n                {btnText}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HintButton;\r\n","import React from \"react\";\r\nimport HintButton from \"../HintButton\";\r\n\r\nfunction QuestionPanel({\r\n    question,\r\n    currentQuestion,\r\n    isAnswerChosen,\r\n    isAvailableFiftyFifty,\r\n    isAvailableDeleteOne,\r\n    fiftyFifty,\r\n    deleteOne,\r\n    loaderIcon,\r\n}) {\r\n    const isIconVisible = loaderIcon ? \"none\" : \"flex\";\r\n    const isAnswerSubmitted = isAnswerChosen ? \"warning error\" : \"warning\";\r\n    return (\r\n        <div className=\"question-panel\" style={{ display: isIconVisible }}>\r\n            <div className=\"quiz-information\">\r\n                <HintButton\r\n                    deleteMethod={fiftyFifty}\r\n                    isAvailable={isAvailableFiftyFifty}\r\n                    btnText=\"50:50\"\r\n                />\r\n\r\n                <span className=\" question-counter\">\r\n                    <span>{currentQuestion}/10</span>\r\n                </span>\r\n\r\n                <HintButton\r\n                    deleteMethod={deleteOne}\r\n                    isAvailable={isAvailableDeleteOne}\r\n                    btnText=\"Delete One\"\r\n                />\r\n            </div>\r\n            <div className=\"question-container\">\r\n                <h1 className=\"question-heading\">{question.quest}</h1>\r\n            </div>\r\n            <p className={isAnswerSubmitted}>Please select an answer!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Answer extends Component {\r\n    render() {\r\n        const {\r\n            selectAnswer,\r\n            answerText,\r\n            id,\r\n            answerSubmitedClass,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={\"answer h1 \" + answerSubmitedClass}\r\n                onClick={selectAnswer}\r\n                id={id}\r\n            >\r\n                {answerText}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Answer;\r\n","import React, { Component } from \"react\";\r\nimport Answer from \"./Answer\";\r\n\r\nclass AnswerPanel extends Component {\r\n    render() {\r\n        const {\r\n            answers,\r\n            isSubmitted,\r\n            selectAnswer,\r\n            isAnswerChosen,\r\n        } = this.props;\r\n        const onSelect = isSubmitted ? null : selectAnswer;\r\n\r\n        const answersList = answers.map((answer) => (\r\n            <Answer\r\n                key={answer.id}\r\n                id={answer.id}\r\n                answerText={answer.text}\r\n                selectAnswer={onSelect}\r\n                answerClass={isAnswerChosen}\r\n                answerSubmitedClass={answer.submitedAnswerClass}\r\n            />\r\n        ));\r\n\r\n        return <div className=\"answers-panel\">{answersList}</div>;\r\n    }\r\n}\r\n\r\nexport default AnswerPanel;\r\n","import React from \"react\";\r\n\r\nfunction NextQuestionButton(props) {\r\n    const { getNextQuestion, currentQuestion, quizLength, loaderIcon } = props;\r\n\r\n    const displayButton = () => {\r\n        let display;\r\n        const isVisible =\r\n            currentQuestion === quizLength\r\n                ? \"none\"\r\n                : loaderIcon\r\n                ? \"none\"\r\n                : \"flex\";\r\n        display = isVisible;\r\n        return display;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{ display: `${displayButton()}` }}\r\n                className=\"btn btn-next-question\"\r\n                onClick={getNextQuestion}\r\n            >\r\n                Next question\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NextQuestionButton;\r\n","import React from \"react\";\r\n\r\nfunction LoaderIcon({ loaderIcon }) {\r\n    const isIconVisible = loaderIcon ? \"block\" : \"none\";\r\n    return (\r\n        <div\r\n            style={{ display: `${isIconVisible}` }}\r\n            className=\"loader-icon\"\r\n        ></div>\r\n    );\r\n}\r\n\r\nexport default LoaderIcon;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FinishQuizButton = ({\r\n    points,\r\n    currentQuestion,\r\n    isSubmitted,\r\n    quizLength\r\n}) => {\r\n    const displayButton = () => {\r\n        return currentQuestion === quizLength ? \"\" : \"none\";\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isSubmitted ? (\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/statistics\",\r\n                        state: {\r\n                            points: points\r\n                        }\r\n                    }}\r\n                >\r\n                    <button\r\n                        style={{ display: displayButton() }}\r\n                        className=\"btn btn-finish-quiz\"\r\n                        points={points}\r\n                    >\r\n                        Finish Quiz\r\n                    </button>\r\n                </Link>\r\n            ) : (\r\n                <button\r\n                    disabled\r\n                    style={{ display: displayButton() }}\r\n                    className=\"btn btn-finish-quiz btn-disabled\"\r\n                    points={points}\r\n                >\r\n                    Finish Quiz\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FinishQuizButton;\r\n","import React, { Component } from \"react\";\r\nimport QuestionPanel from \"../../components/Question/QuestionPanel\";\r\nimport AnswerPanel from \"../../components/Answers/AnswerPanel\";\r\nimport NextQuestionButton from \"../../components/NextQuestionButton\";\r\nimport LoaderIcon from \"../../components/LoaderIcon\";\r\nimport FinishQuizButton from \"../../components/FinishQuizButton\";\r\n\r\nclass QuizPanel extends Component {\r\n    state = {\r\n        apiURL: this.props.location.state.apiURL,\r\n        questions: [],\r\n        answers: [],\r\n        actualQuestion: \"\",\r\n        actualAnswers: [],\r\n        isAnswerChosen: false,\r\n        submitAnswer: false,\r\n        deleteOneHint: true,\r\n        fiftyFiftyHint: true,\r\n        currentQuestion: 1,\r\n        points: 0,\r\n        loaderIcon: true,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { apiURL } = this.state;\r\n\r\n        fetch(apiURL)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((res) => {\r\n                const formattedQuestion = res.results.map((loadedQuestion) => ({\r\n                    quest: this.htmlDecode(loadedQuestion.question),\r\n                }));\r\n\r\n                const formattedAnswers = res.results.map((answer) => {\r\n                    const answerChoices = [...answer.incorrect_answers];\r\n                    answerChoices.splice(\r\n                        Math.floor(Math.random() * 4),\r\n                        0,\r\n                        answer.correct_answer\r\n                    );\r\n                    const isAnswerCorrect = (index) => {\r\n                        return answerChoices[index] === answer.correct_answer;\r\n                    };\r\n                    const answers = answerChoices.map((answer, index) => ({\r\n                        id: index + 1,\r\n                        text: this.htmlDecode(answerChoices[index]),\r\n                        isCorrect: isAnswerCorrect(index),\r\n                        isMarked: false,\r\n                        submitedAnswerClass: \"answer-hover\",\r\n                    }));\r\n                    return answers;\r\n                });\r\n\r\n                this.setState({\r\n                    questions: [...formattedQuestion],\r\n                    answers: [...formattedAnswers],\r\n                });\r\n                this.setState({\r\n                    actualQuestion: this.state.questions[0],\r\n                    actualAnswers: this.state.answers[0],\r\n                    loaderIcon: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    htmlDecode = (input) => {\r\n        const doc = new DOMParser().parseFromString(input, \"text/html\");\r\n        return doc.documentElement.textContent;\r\n    };\r\n\r\n    selectAnswer = (event) => {\r\n        const { actualAnswers } = this.state;\r\n        const clickedAnswer = parseInt(event.target.id);\r\n\r\n        this.setState(\r\n            actualAnswers.map((answer) => {\r\n                if (clickedAnswer === answer.id) {\r\n                    return (answer.isMarked = true);\r\n                } else return answer;\r\n            })\r\n        );\r\n        this.submitAnswer();\r\n    };\r\n\r\n    submitAnswer = () => {\r\n        const { submitAnswer, actualAnswers, points } = this.state;\r\n\r\n        if (submitAnswer) {\r\n            return;\r\n        }\r\n        this.setState(\r\n            actualAnswers.map((answer) => {\r\n                const { isMarked, isCorrect } = answer;\r\n                if (isMarked && !isCorrect) {\r\n                    return (answer.submitedAnswerClass = \" wrong\");\r\n                } else if (isMarked && isCorrect) {\r\n                    return (\r\n                        (answer.submitedAnswerClass = \" correct\"),\r\n                        this.setState({ points: points + 1 })\r\n                    );\r\n                } else if (isCorrect) {\r\n                    return (answer.submitedAnswerClass = \" correct\");\r\n                } else {\r\n                    return (answer.submitedAnswerClass = \" \");\r\n                }\r\n            })\r\n        );\r\n        this.setState({ isAnswerChosen: false, submitAnswer: true });\r\n    };\r\n\r\n    showWarningSelectAnswer = () => {\r\n        this.setState({\r\n            isAnswerChosen: true,\r\n        });\r\n    };\r\n\r\n    getNextQuestion = () => {\r\n        const {\r\n            submitAnswer,\r\n            currentQuestion,\r\n            questions,\r\n            answers,\r\n        } = this.state;\r\n\r\n        if (!submitAnswer) {\r\n            this.showWarningSelectAnswer();\r\n            return;\r\n        }\r\n        if (currentQuestion < questions.length) {\r\n            const number = currentQuestion;\r\n            this.setState({\r\n                actualQuestion: questions[number],\r\n                actualAnswers: answers[number],\r\n                currentQuestion: currentQuestion + 1,\r\n            });\r\n            this.setState({ submitAnswer: false });\r\n        }\r\n    };\r\n\r\n    getRandomNumber = (x) => {\r\n        const random = Math.floor(Math.random() * x);\r\n        return random;\r\n    };\r\n\r\n    deleteAnswer = (hint) => {\r\n        const { actualAnswers } = this.state;\r\n\r\n        if (hint) {\r\n            const arrayFiltered = actualAnswers\r\n                .filter((answer) => answer.isCorrect === false)\r\n                .filter((answer) => answer.submitedAnswerClass !== \"wrong\");\r\n            const randomNumber = this.getRandomNumber(arrayFiltered.length);\r\n            const finalArray = arrayFiltered.map((answer, index) => {\r\n                if (index === randomNumber) {\r\n                    return (\r\n                        (answer.submitedAnswerClass = \"wrong\"),\r\n                        (answer.isMarked = true)\r\n                    );\r\n                } else return answer;\r\n            });\r\n            this.setState(finalArray);\r\n        }\r\n    };\r\n\r\n    deleteOneAnswer = (hint) => {\r\n        this.deleteAnswer(hint);\r\n        this.setState({\r\n            deleteOneHint: false,\r\n        });\r\n    };\r\n\r\n    deleteTwoAnswers = (hint) => {\r\n        this.deleteAnswer(hint);\r\n        this.deleteAnswer(hint);\r\n        this.setState({\r\n            fiftyFiftyHint: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            loaderIcon,\r\n            actualQuestion,\r\n            currentQuestion,\r\n            points,\r\n            isAnswerChosen,\r\n            submitAnswer,\r\n            actualAnswers,\r\n            fiftyFiftyHint,\r\n            deleteOneHint,\r\n            questions,\r\n        } = this.state;\r\n\r\n        const {\r\n            selectAnswer,\r\n            deleteOneAnswer,\r\n            deleteTwoAnswers,\r\n            getNextQuestion,\r\n        } = this;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"main-panel quiz-panel\">\r\n                    <LoaderIcon loaderIcon={loaderIcon} />\r\n                    <QuestionPanel\r\n                        question={actualQuestion}\r\n                        currentQuestion={currentQuestion}\r\n                        isAnswerChosen={isAnswerChosen}\r\n                        isAvailableDeleteOne={deleteOneHint}\r\n                        isAvailableFiftyFifty={fiftyFiftyHint}\r\n                        deleteOne={deleteOneAnswer}\r\n                        fiftyFifty={deleteTwoAnswers}\r\n                        loaderIcon={loaderIcon}\r\n                    />\r\n                    <AnswerPanel\r\n                        isSubmitted={submitAnswer}\r\n                        selectAnswer={selectAnswer}\r\n                        answers={actualAnswers}\r\n                    />\r\n\r\n                    <NextQuestionButton\r\n                        getNextQuestion={getNextQuestion}\r\n                        currentQuestion={currentQuestion}\r\n                        quizLength={questions.length}\r\n                        loaderIcon={loaderIcon}\r\n                    />\r\n                    <FinishQuizButton\r\n                        points={points}\r\n                        currentQuestion={currentQuestion}\r\n                        isSubmitted={submitAnswer}\r\n                        quizLength={questions.length}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizPanel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Statistics(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main-panel statistics-panel\">\r\n                <h1>Congratulations!</h1>\r\n                <p>\r\n                    You got {props.location.state.points} out of 10 points in\r\n                    quiz. Would you like to try again?\r\n                </p>\r\n                <Link to=\"/\">\r\n                    <button className=\"btn btn-statistics\">Try again?</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class MainPanel extends Component {\r\n    state = {\r\n        apiURL:\r\n            \"https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple\",\r\n        category: \"General Knowledge\",\r\n    };\r\n\r\n    changeCategory = (event) => {\r\n        const optionText =\r\n            event.target.options[event.target.selectedIndex].text;\r\n        this.setState({\r\n            apiURL: event.target.value,\r\n            category: optionText,\r\n        });\r\n    };\r\n\r\n    getCategoryURL = (number) => {\r\n        return `https://opentdb.com/api.php?amount=10&category=${number}&difficulty=easy&type=multiple`;\r\n    };\r\n\r\n    render() {\r\n        const { apiURL, category } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"main-panel\">\r\n                    <h1 className=\"big\">Quiz App</h1>\r\n\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/quiz\",\r\n                            state: {\r\n                                apiURL: apiURL,\r\n                                category: category,\r\n                            },\r\n                        }}\r\n                        className=\"btn btn-start\"\r\n                    >\r\n                        Start Quiz\r\n                    </Link>\r\n                    <div className=\"categories\">\r\n                        <label\r\n                            htmlFor=\"categories\"\r\n                            className=\"categories-label\"\r\n                        >\r\n                            Category:\r\n                        </label>\r\n                        <select\r\n                            id=\"categories\"\r\n                            className=\"categories\"\r\n                            onChange={this.changeCategory}\r\n                        >\r\n                            <option value={this.getCategoryURL(9)}>\r\n                                General Knowledge\r\n                            </option>\r\n                            <option value={this.getCategoryURL(11)}>\r\n                                Films\r\n                            </option>\r\n                            <option value={this.getCategoryURL(15)}>\r\n                                Video Games\r\n                            </option>\r\n                            <option value={this.getCategoryURL(18)}>\r\n                                Computers\r\n                            </option>\r\n                            <option value={this.getCategoryURL(21)}>\r\n                                Sports\r\n                            </option>\r\n                            <option value={this.getCategoryURL(27)}>\r\n                                Animals\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPanel;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/main.scss\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Quiz from \"./pages/quiz/QuizPanel\";\r\nimport Statistics from \"./pages/statistics/Statistics\";\r\nimport MainPanel from \"./pages/main/MainPanel\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Route exact path=\"/\">\r\n                    <MainPanel />\r\n                </Route>\r\n                <Route path=\"/quiz\" component={Quiz} />\r\n                <Route path=\"/statistics\" component={Statistics} />\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}