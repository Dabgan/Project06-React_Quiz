{"version":3,"sources":["components/FiftyFiftyButton.jsx","components/DeleteOneButton.jsx","components/pages/quiz page/QuestionPanel.jsx","components/pages/quiz page/Answer.jsx","components/pages/quiz page/AnswerPanel.jsx","components/NextQuestionButton.jsx","components/LoaderIcon.jsx","components/FinishQuizButton.jsx","components/pages/quiz page/QuizPanel.jsx","components/pages/statistic page/Statistics.jsx","components/pages/main page/MainPanel.jsx","App.js","index.js"],"names":["FiftyFiftyButton","fiftyFifty","isAvailable","loaderIcon","buttonStyle","isIconVisible","className","style","display","onClick","DeleteOneButton","deleteOne","QuestionPanel","question","currentQuestion","isAnswerChosen","isAvailableFiftyFifty","isAvailableDeleteOne","isAnswerSubmitted","quest","Answer","this","props","selectAnswer","answerText","id","answerSubmitedClass","Component","AnswerPanel","answers","isSubmitted","onSelect","answersList","map","answer","key","text","answerClass","submitedAnswerClass","NextQuestionButton","getNextQuestion","quizLength","LoaderIcon","FinishQuizButton","points","displayButton","Fragment","to","pathname","state","disabled","QuizPanel","apiURL","location","questions","actualQuestion","actualAnswers","submitAnswer","deleteOneHint","fiftyFiftyHint","componentDidMount","fetch","then","res","json","formattedQuestion","results","loadedQuestion","htmlDecode","formattedAnswers","answerChoices","incorrect_answers","splice","Math","floor","random","correct_answer","isAnswerCorrect","index","isCorrect","isMarked","setState","input","DOMParser","parseFromString","documentElement","textContent","event","clickedAnswer","parseInt","target","showWarningSelectAnswer","length","number","getRandomNumber","x","deleteAnswer","hint","arrayFiltered","filter","randomNumber","finalArray","deleteOneAnswer","deleteTwoAnswers","Statistics","MainPanel","category","changeCategory","optionText","options","selectedIndex","value","getCategoryURL","htmlFor","onChange","App","exact","path","component","Quiz","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edcd6a1a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction FiftyFiftyButton({ fiftyFifty, isAvailable, loaderIcon }) {\r\n    const buttonStyle = isAvailable ? \"\" : \"btn-disabled\";\r\n    const isIconVisible = loaderIcon ? \"none\" : \"inline-block\";\r\n    return (\r\n        <div className=\"prompt\">\r\n            <button\r\n                style={{ display: `${isIconVisible}` }}\r\n                className={\"btn btn-prompt \" + buttonStyle}\r\n                onClick={() => fiftyFifty(isAvailable)}\r\n            >\r\n                50:50\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FiftyFiftyButton;\r\n","import React from \"react\";\r\n\r\nfunction DeleteOneButton({ deleteOne, isAvailable, loaderIcon }) {\r\n    const buttonStyle = isAvailable ? \"\" : \"btn-disabled\";\r\n    const isIconVisible = loaderIcon ? \"none\" : \"inline-block\";\r\n\r\n    return (\r\n        <div className=\"prompt\">\r\n            <button\r\n                style={{ display: `${isIconVisible}` }}\r\n                className={\"btn btn-prompt \" + buttonStyle}\r\n                onClick={() => deleteOne(isAvailable)}\r\n            >\r\n                Delete one\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteOneButton;\r\n","import React from \"react\";\r\nimport FiftyFiftyButton from \"../../FiftyFiftyButton\";\r\nimport DeleteOneButton from \"../../DeleteOneButton\";\r\n\r\nfunction QuestionPanel({\r\n    question,\r\n    currentQuestion,\r\n    isAnswerChosen,\r\n    isAvailableFiftyFifty,\r\n    isAvailableDeleteOne,\r\n    fiftyFifty,\r\n    deleteOne,\r\n    loaderIcon\r\n}) {\r\n    const isIconVisible = loaderIcon ? \"none\" : \"flex\";\r\n    const isAnswerSubmitted = isAnswerChosen ? \"warning error\" : \"warning\";\r\n    return (\r\n        <div className=\"question-panel\">\r\n            <div className=\"quiz-information\">\r\n                <FiftyFiftyButton\r\n                    loaderIcon={loaderIcon}\r\n                    fiftyFifty={fiftyFifty}\r\n                    isAvailable={isAvailableFiftyFifty}\r\n                />\r\n\r\n                <span\r\n                    style={{ display: `${isIconVisible}` }}\r\n                    className=\" question-counter\"\r\n                >\r\n                    <span>{currentQuestion}/10</span>\r\n                </span>\r\n\r\n                <DeleteOneButton\r\n                    loaderIcon={loaderIcon}\r\n                    deleteOne={deleteOne}\r\n                    isAvailable={isAvailableDeleteOne}\r\n                />\r\n            </div>\r\n            <div\r\n                style={{ display: `${isIconVisible}` }}\r\n                className=\"question-container\"\r\n            >\r\n                <h1 className=\"question-heading\">{question.quest}</h1>\r\n            </div>\r\n            <p className={isAnswerSubmitted}>Please select an answer!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Answer extends Component {\r\n    render() {\r\n        const {\r\n            selectAnswer,\r\n            answerText,\r\n            id,\r\n            answerSubmitedClass\r\n        } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={\"answer h1 \" + answerSubmitedClass}\r\n                onClick={selectAnswer}\r\n                id={id}\r\n            >\r\n                {answerText}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Answer;\r\n","import React, { Component } from \"react\";\r\nimport Answer from \"./Answer\";\r\n\r\nclass AnswerPanel extends Component {\r\n    render() {\r\n        const {\r\n            answers,\r\n            isSubmitted,\r\n            selectAnswer,\r\n            isAnswerChosen\r\n        } = this.props;\r\n        const onSelect = isSubmitted ? null : selectAnswer;\r\n\r\n        const answersList = answers.map(answer => (\r\n            <Answer\r\n                key={answer.id}\r\n                id={answer.id}\r\n                answerText={answer.text}\r\n                selectAnswer={onSelect}\r\n                answerClass={isAnswerChosen}\r\n                answerSubmitedClass={answer.submitedAnswerClass}\r\n            />\r\n        ));\r\n\r\n        return <div className=\"answers-panel\">{answersList}</div>;\r\n    }\r\n}\r\n\r\nexport default AnswerPanel;\r\n","import React from \"react\";\r\n\r\nfunction NextQuestionButton(props) {\r\n    const { getNextQuestion, currentQuestion, quizLength } = props;\r\n\r\n    const displayButton = () => {\r\n        return currentQuestion === quizLength ? \"none\" : \"\";\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{ display: displayButton() }}\r\n                className=\"btn btn-next-question\"\r\n                onClick={getNextQuestion}\r\n            >\r\n                Next question\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NextQuestionButton;\r\n","import React from \"react\";\r\n\r\nfunction LoaderIcon({ loaderIcon }) {\r\n    const isIconVisible = loaderIcon ? \"block\" : \"none\";\r\n    return (\r\n        <div\r\n            style={{ display: `${isIconVisible}` }}\r\n            className=\"loader-icon\"\r\n        ></div>\r\n    );\r\n}\r\n\r\nexport default LoaderIcon;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FinishQuizButton = ({\r\n    points,\r\n    currentQuestion,\r\n    isSubmitted,\r\n    quizLength\r\n}) => {\r\n    const displayButton = () => {\r\n        return currentQuestion === quizLength ? \"\" : \"none\";\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isSubmitted ? (\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/statistics\",\r\n                        state: {\r\n                            points: points\r\n                        }\r\n                    }}\r\n                >\r\n                    <button\r\n                        style={{ display: displayButton() }}\r\n                        className=\"btn btn-finish-quiz\"\r\n                        points={points}\r\n                    >\r\n                        Finish Quiz\r\n                    </button>\r\n                </Link>\r\n            ) : (\r\n                <button\r\n                    disabled\r\n                    style={{ display: displayButton() }}\r\n                    className=\"btn btn-finish-quiz btn-disabled\"\r\n                    points={points}\r\n                >\r\n                    Finish Quiz\r\n                </button>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FinishQuizButton;\r\n","import React, { Component } from \"react\";\r\nimport QuestionPanel from \"./QuestionPanel\";\r\nimport AnswerPanel from \"./AnswerPanel\";\r\nimport NextQuestionButton from \"../../NextQuestionButton\";\r\nimport LoaderIcon from \"../../LoaderIcon\";\r\nimport FinishQuizButton from \"../../FinishQuizButton\";\r\n\r\nclass QuizPanel extends Component {\r\n    state = {\r\n        apiURL: this.props.location.state.apiURL,\r\n        // questionCategory: this.props.location.state.category,\r\n        questions: [],\r\n        answers: [],\r\n        actualQuestion: \"\",\r\n        actualAnswers: [],\r\n        isAnswerChosen: false,\r\n        submitAnswer: false,\r\n        deleteOneHint: true,\r\n        fiftyFiftyHint: true,\r\n        currentQuestion: 1,\r\n        points: 0,\r\n        loaderIcon: true\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { apiURL } = this.state;\r\n\r\n        fetch(apiURL)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(res => {\r\n                const formattedQuestion = res.results.map(loadedQuestion => ({\r\n                    quest: this.htmlDecode(loadedQuestion.question)\r\n                }));\r\n\r\n                const formattedAnswers = res.results.map(answer => {\r\n                    const answerChoices = [...answer.incorrect_answers];\r\n                    answerChoices.splice(\r\n                        Math.floor(Math.random() * 4),\r\n                        0,\r\n                        answer.correct_answer\r\n                    );\r\n                    const isAnswerCorrect = index => {\r\n                        return answerChoices[index] === answer.correct_answer;\r\n                    };\r\n                    const answers = answerChoices.map((answer, index) => ({\r\n                        id: index + 1,\r\n                        text: this.htmlDecode(answerChoices[index]),\r\n                        isCorrect: isAnswerCorrect(index),\r\n                        isMarked: false,\r\n                        submitedAnswerClass: \"answer-hover\"\r\n                    }));\r\n                    return answers;\r\n                });\r\n\r\n                this.setState({\r\n                    questions: [...formattedQuestion],\r\n                    answers: [...formattedAnswers]\r\n                });\r\n                this.setState({\r\n                    actualQuestion: this.state.questions[0],\r\n                    actualAnswers: this.state.answers[0],\r\n                    loaderIcon: false\r\n                });\r\n            });\r\n    };\r\n\r\n    htmlDecode = input => {\r\n        const doc = new DOMParser().parseFromString(input, \"text/html\");\r\n        return doc.documentElement.textContent;\r\n    };\r\n\r\n    selectAnswer = event => {\r\n        const { actualAnswers } = this.state;\r\n        const clickedAnswer = parseInt(event.target.id);\r\n\r\n        this.setState(\r\n            actualAnswers.map(answer => {\r\n                if (clickedAnswer === answer.id) {\r\n                    return (answer.isMarked = true);\r\n                } else return answer;\r\n            })\r\n        );\r\n        this.submitAnswer();\r\n    };\r\n\r\n    submitAnswer = () => {\r\n        const { submitAnswer, actualAnswers, points } = this.state;\r\n\r\n        if (submitAnswer) {\r\n            return;\r\n        }\r\n        this.setState(\r\n            actualAnswers.map(answer => {\r\n                const { isMarked, isCorrect } = answer;\r\n                if (isMarked && !isCorrect) {\r\n                    return (answer.submitedAnswerClass = \" wrong\");\r\n                } else if (isMarked && isCorrect) {\r\n                    return (\r\n                        (answer.submitedAnswerClass = \" correct\"),\r\n                        this.setState({ points: points + 1 })\r\n                    );\r\n                } else if (isCorrect) {\r\n                    return (answer.submitedAnswerClass = \" correct\");\r\n                } else {\r\n                    return (answer.submitedAnswerClass = \" \");\r\n                }\r\n            })\r\n        );\r\n        this.setState({ isAnswerChosen: false, submitAnswer: true });\r\n    };\r\n\r\n    showWarningSelectAnswer = () => {\r\n        this.setState({\r\n            isAnswerChosen: true\r\n        });\r\n    };\r\n\r\n    getNextQuestion = () => {\r\n        const {\r\n            submitAnswer,\r\n            currentQuestion,\r\n            questions,\r\n            answers\r\n        } = this.state;\r\n\r\n        if (!submitAnswer) {\r\n            this.showWarningSelectAnswer();\r\n            return;\r\n        }\r\n        if (currentQuestion < questions.length) {\r\n            const number = currentQuestion;\r\n            this.setState({\r\n                actualQuestion: questions[number],\r\n                actualAnswers: answers[number],\r\n                currentQuestion: currentQuestion + 1\r\n            });\r\n            this.setState({ submitAnswer: false });\r\n        }\r\n    };\r\n\r\n    getRandomNumber = x => {\r\n        const random = Math.floor(Math.random() * x);\r\n        return random;\r\n    };\r\n\r\n    deleteAnswer = hint => {\r\n        const { actualAnswers } = this.state;\r\n\r\n        if (hint) {\r\n            const arrayFiltered = actualAnswers\r\n                .filter(answer => answer.isCorrect === false)\r\n                .filter(answer => answer.submitedAnswerClass !== \"wrong\");\r\n            const randomNumber = this.getRandomNumber(arrayFiltered.length);\r\n            const finalArray = arrayFiltered.map((answer, index) => {\r\n                if (index === randomNumber) {\r\n                    return (\r\n                        (answer.submitedAnswerClass = \"wrong\"),\r\n                        (answer.isMarked = true)\r\n                    );\r\n                } else return answer;\r\n            });\r\n            this.setState(finalArray);\r\n        }\r\n    };\r\n\r\n    deleteOneAnswer = hint => {\r\n        this.deleteAnswer(hint);\r\n        this.setState({\r\n            deleteOneHint: false\r\n        });\r\n    };\r\n\r\n    deleteTwoAnswers = hint => {\r\n        this.deleteAnswer(hint);\r\n        this.deleteAnswer(hint);\r\n        this.setState({\r\n            fiftyFiftyHint: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            loaderIcon,\r\n            actualQuestion,\r\n            currentQuestion,\r\n            points,\r\n            isAnswerChosen,\r\n            submitAnswer,\r\n            actualAnswers,\r\n            fiftyFiftyHint,\r\n            deleteOneHint,\r\n            questions\r\n        } = this.state;\r\n\r\n        const {\r\n            selectAnswer,\r\n            deleteOneAnswer,\r\n            deleteTwoAnswers,\r\n            getNextQuestion\r\n        } = this;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"main-panel quiz-panel\">\r\n                    <LoaderIcon loaderIcon={loaderIcon} />\r\n                    <QuestionPanel\r\n                        question={actualQuestion}\r\n                        currentQuestion={currentQuestion}\r\n                        isAnswerChosen={isAnswerChosen}\r\n                        isAvailableDeleteOne={deleteOneHint}\r\n                        isAvailableFiftyFifty={fiftyFiftyHint}\r\n                        deleteOne={deleteOneAnswer}\r\n                        fiftyFifty={deleteTwoAnswers}\r\n                        loaderIcon={loaderIcon}\r\n                    />\r\n                    <AnswerPanel\r\n                        isSubmitted={submitAnswer}\r\n                        selectAnswer={selectAnswer}\r\n                        answers={actualAnswers}\r\n                    />\r\n\r\n                    <NextQuestionButton\r\n                        getNextQuestion={getNextQuestion}\r\n                        currentQuestion={currentQuestion}\r\n                        quizLength={questions.length}\r\n                        loaderIcon={loaderIcon}\r\n                    />\r\n                    <FinishQuizButton\r\n                        points={points}\r\n                        currentQuestion={currentQuestion}\r\n                        isSubmitted={submitAnswer}\r\n                        quizLength={questions.length}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizPanel;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Statistics(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"main-panel h1 statistics-panel\">\r\n                <h1>Congratulations!</h1>\r\n                <p>\r\n                    You got {props.location.state.points} out of 10 points in\r\n                    quiz. Would you like to try again?\r\n                </p>\r\n                <Link to=\"/\">\r\n                    <button className=\"btn btn-statistics\">Try again?</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class MainPanel extends Component {\r\n    state = {\r\n        apiURL:\r\n            \"https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple\",\r\n        category: \"General Knowledge\"\r\n    };\r\n\r\n    changeCategory = event => {\r\n        const optionText =\r\n            event.target.options[event.target.selectedIndex].text;\r\n        this.setState({\r\n            apiURL: event.target.value,\r\n            category: optionText\r\n        });\r\n    };\r\n\r\n    getCategoryURL = number => {\r\n        return `https://opentdb.com/api.php?amount=10&category=${number}&difficulty=easy&type=multiple`;\r\n    };\r\n\r\n    render() {\r\n        const { apiURL, category } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"main-panel\">\r\n                    <h1 className=\"big\">Quiz App</h1>\r\n\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/quiz\",\r\n                            state: {\r\n                                apiURL: apiURL,\r\n                                category: category\r\n                            }\r\n                        }}\r\n                        className=\"btn btn-start\"\r\n                    >\r\n                        Start Quiz\r\n                    </Link>\r\n                    <div className=\"categories\">\r\n                        <label\r\n                            htmlFor=\"categories\"\r\n                            className=\"categories-label\"\r\n                        >\r\n                            Category:\r\n                        </label>\r\n                        <select\r\n                            id=\"categories\"\r\n                            className=\"categories\"\r\n                            onChange={this.changeCategory}\r\n                        >\r\n                            <option value={this.getCategoryURL(9)}>\r\n                                General Knowledge\r\n                            </option>\r\n                            <option value={this.getCategoryURL(11)}>\r\n                                Films\r\n                            </option>\r\n                            <option value={this.getCategoryURL(15)}>\r\n                                Video Games\r\n                            </option>\r\n                            <option value={this.getCategoryURL(18)}>\r\n                                Computers\r\n                            </option>\r\n                            <option value={this.getCategoryURL(21)}>\r\n                                Sports\r\n                            </option>\r\n                            <option value={this.getCategoryURL(27)}>\r\n                                Animals\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPanel;\r\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Quiz from \"./components/pages/quiz page/QuizPanel\";\nimport Statistics from \"./components/pages/statistic page/Statistics\";\nimport MainPanel from \"./components/pages/main page/MainPanel\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <Route exact path=\"/\">\n                    <MainPanel />\n                </Route>\n                <Route path=\"/quiz\" component={Quiz} />\n                <Route path=\"/statistics\" component={Statistics} />\n            </Router>\n        );\n    }\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}